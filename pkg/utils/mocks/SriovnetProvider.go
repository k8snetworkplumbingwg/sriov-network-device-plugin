// Code generated by mockery v2.12.3. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// SriovnetProvider is an autogenerated mock type for the SriovnetProvider type
type SriovnetProvider struct {
	mock.Mock
}

// GetUplinkRepresentor provides a mock function with given fields: vfPciAddress
func (_m *SriovnetProvider) GetUplinkRepresentor(vfPciAddress string) (string, error) {
	ret := _m.Called(vfPciAddress)

	var r0 string
	if rf, ok := ret.Get(0).(func(string) string); ok {
		r0 = rf(vfPciAddress)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(vfPciAddress)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetUplinkRepresentorFromAux provides a mock function with given fields: auxDev
func (_m *SriovnetProvider) GetUplinkRepresentorFromAux(auxDev string) (string, error) {
	ret := _m.Called(auxDev)

	var r0 string
	if rf, ok := ret.Get(0).(func(string) string); ok {
		r0 = rf(auxDev)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(auxDev)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type NewSriovnetProviderT interface {
	mock.TestingT
	Cleanup(func())
}

// NewSriovnetProvider creates a new instance of SriovnetProvider. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewSriovnetProvider(t NewSriovnetProviderT) *SriovnetProvider {
	mock := &SriovnetProvider{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
